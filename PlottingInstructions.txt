Command notebook for plotting code python scripts/generate_plots.py --target IONQ --peers RGTI,QUBT,QBTS --asof 2025-08-29 --weight-mode corr_ul --out-dir plots/IONQ_2025-08-29_ul
python scripts/generate_plots.py --target IONQ --peers RGTI,QUBT,QBTS --asof 2025-08-29 --weight-mode corr_iv_atm --out-dir plots/IONQ_2025-08-29_atm
python scripts/generate_plots.py --target IONQ --peers RGTI,QUBT,QBTS --asof 2025-08-29 --weight-mode corr_surface --out-dir plots/IONQ_2025-08-29_surface

for term smile, plot peers as well

ensure that the defailt text and label zie for plots is larger than it is right now for downloads just because i can't see anything


python src/fetch_data_sqlite.py --db data\iv_data_1h.db --tickers IONQ RGTI QUBT QBTS --force --start 2025-01-01 --end 2025-08-27

python scripts/generate_plots.py --target IONQ --peers RGTI,QUBT,QBTS --asof 2025-08-29 --max-expiries 8 --weight-mode corr_surface_grid --no-cache --out-dir plots/IONQ_surface_corr
python scripts/generate_plots.py --target IONQ --peers RGTI,QUBT,QBTS --asof 2025-08-29 --max-expiries 8 --weight-mode pca_surface_grid --no-cache --out-dir plots/IONQ_surface_pca


python scripts/run_plots.py --db data/iv_data_1m.db --timeframe 1m --tickers QBTS IONQ RGTI QUBT --start 2025-06-02 --end 2025-08-06 --rolling-target IONQ
python scripts/generate_plots.py --target IONQ --peers RGTI,QUBT,QBTS --asof 2025-08-29 --max-expiries 8 --weight-mode corr_surface_grid --no-cache --out-dir plots/IONQ_surface_grid
python scripts/show_corr_rows.py --tickers QUBT QBTS --start 06-02-2025 --end 06-03-2025 --db data/iv_data_1m.db --tolerance 2s
* python -c "import sys; sys.path.insert(0,'.'); from analysis.compositeETFBuilder import build_surface_grids; import pandas as pd; 
* 
* 
* 
* 
* g=build_surface_grids(['IONQ','RGTI','QUBT','QBTS']); print({t: list(map(str, sorted(g.get(t,{}).keys())))[] for t in ['IONQ','RGTI','QUBT','QBTS']})"
How to run
* Train/evaluate on surface tensors (1m example):
python src/main_runner.py --tickers QBTS IONQ RGTI QUBT --start 2025-06-02 --end 2025-08-06 --timeframe 1m --use-surface --surface-k-bins 12 --surface-t-bins 8 --surface-agg median
* Generate plots + surface weights:
python scripts/run_plots.py --tickers QBTS IONQ RGTI QUBT --start 2025-06-02 --end 2025-08-06 --db data/iv_data_1m.db --timeframe 1m --surface-weights-target QBTS --surface-k-bins 12 --surface-t-bins 8 --surface-agg median
Outputs
* Models: outputs/models/pooled_{iv_ret_fwd|iv_clip}_<ts>.json
* Evaluations: outputs/evaluations/*_evaluation.json with RMSE/R2
* Plots: surface correlation heatmap and optional surface weights bar/CSV in plots/
Want me to add a surface-mode evaluator hook into scripts/run_plots.py to inspect surface-model results (e.g., reading the new *_evaluation.json files), or to dump feature importances from the surface models too?

Interpretation of 1-minute vs 1-hour correlations
* At 1-minute granularity (first figure you showed):
o Both IV levels and returns correlations are near zero.
o Implied vol for these tickers moves essentially independently in ultra-short timeframes.
o Suggests no immediate co-movement, meaning option markets are not reacting in lockstep minute to minute.
* At 1-hour granularity (second figure you just uploaded):
o Level correlations are stronger (e.g., IONQ–RGTI ~0.47, IONQ–QUBT ~0.47).
o Return correlations also show moderate co-movement (IONQ–QUBT ~0.27, RGTI–QUBT ~0.34).
o This indicates that over longer horizons, common factors start to show through — the vol regimes between peers are somewhat aligned, and shocks in one ticker are more likely to spill into others.
python scripts/generate_plots.py --target IONQ --peers RGTI,QUBT,QBTS --asof 2025-08-29 --weight-mode pca_ul --out-dir plots/IONQ_ul_pcapython scripts/generate_plots.py --target IONQ --peers RGTI,QUBT,QBTS --asof 2025-08-29 --weight-mode pca_iv_atm --out-dir plots/IONQ_atm_pcapython scripts/generate_plots.py --target IONQ --peers RGTI,QUBT,QBTS --asof 2025-08-29 --weight-mode pca_surface --out-dir plots/IONQ_surface_pca

